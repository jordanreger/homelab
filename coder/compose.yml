services:
  coder:
    image: ghcr.io/coder/coder:${CODER_VERSION:-latest}
    container_name: coder
    restart: unless-stopped
    network_mode: host
    environment:
      CODER_PG_CONNECTION_URL: "postgresql://${POSTGRES_USER:-username}:${POSTGRES_PASSWORD:-password}@localhost/${POSTGRES_DB:-coder}?sslmode=disable"
      CODER_HTTP_ADDRESS: "0.0.0.0:7080"
    env_file:
      - .env
    group_add:
      - 103
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - coder_home:/srv
    depends_on:
      coder-database:
        condition: service_healthy
    labels:
      glance.name: Coder
      glance.icon: si:coder
      glance.url: https://code.reger.cloud
      glance.id: coder

  coder-database:
    image: postgres:16
    container_name: coder-database
    restart: unless-stopped
    network_mode: host
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-username}
      POSTGRES_PASSWORD: ${POSTGRESS_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-coder}
    volumes:
      - coder_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-username} -d ${POSTGRES_DB:-coder}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      glance.parent: coder
      glance.name: DB

volumes:
  coder_data:
  coder_home:
